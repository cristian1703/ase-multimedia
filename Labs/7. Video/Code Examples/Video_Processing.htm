<!--- Assignment
1. How can we improve the efficacy of the processing (think about changing the var imageData = context.getImageData(0, 0, W, H);)?
2. Change the code bellow to display the video in grayscale.
-->
<!DOCTYPE html>
<html>
<head>
    <title>Video - Processing</title>
    <script type="text/javascript" src="http://code.jquery.com/jquery-latest.js"></script>
</head>
<body>

<video id="video" controls="controls" autoplay="autoplay">
    <source src="media/movie.mp4" type="video/mp4" />
    <source src="media/movie.ogg" type="video/ogg" />
    Your browser doesn't support HTML5 video.
</video>
<br>
<canvas id="canvasProcesare"></canvas>

<script type="text/javascript">
    $(function () {
        var video = $("#video")[0]; //var video = document.getElementById("video")
        var canvas = $("#canvasProcesare")[0]; // var canvas = document.getElementById("canvasProcesare");
        var context = canvas.getContext("2d");

        setInterval(function () {

            var W = canvas.width = video.clientWidth;
            var H = canvas.height = video.clientHeight;

            context.drawImage(video, 0, 0, W, H);
            var imageData = context.getImageData(0, 0, W, H);
            var pixels = imageData.data;

            for (var y = 0; y < H; y++) {
                for (var x = 0; x < W; x++) {

                    //      pixels[i] - Red
                    //      pixels[i+1] - Green
                    //      pixels[i+2] - Blue
                    //      pixels[i+3] - Opacity
                    var i = (y * W * 4) + x * 4;

                    //make the first 30 lines darker
                    if (y < 30) {
                        pixels[i] /= 2;
                        pixels[i + 1] /= 2;
                        pixels[i + 2] /= 2;
                    }
                }
            }

            context.putImageData(imageData, 0, 0);

            context.font = 'bold 16px sans-serif';
            context.fillStyle = "white";
            context.fillText("Time: " + video.currentTime.toFixed(1) + "s", 10, 22);
            //The toFixed() method formats a number using fixed-point notation
            //Number.prototype.toFixed(): https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed

        }, 33);
        //The setTimeout() method calls a function or evaluates an expression after a specified number of milliseconds.
        //Tip: 1000 ms = 1 second.
        //33ms ~= 30fps
    });
</script>    
</body>
</html>
